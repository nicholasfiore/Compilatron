{
{
    int a
    a = 1
  }
}$

{
  while (a == b) {}
}

{{if true{int a a = 1}}}

/* throws a bunch of different errors */
{
int a
string b
a = 1 + 1 + 1 + b
print(1 + b)
if (b == 1) {}
}$

/*** following are all Arnell test cases ***/
{
int a
a = 1
print(a)
}$


{
int a
a = 1
if (2+a == 2){
    a = 1
}
while false {

}
}$    

/**This should break on a but allow b to go through**/
{
int b
int a
{
    string b
}
string a
}$

{
/*This should give a error as the initialization is using the uninitialized value*/
int a
a = 2+a
boolean b
b = (false == b)
}$


{
if ((2+2==4)!=("hi"=="hello")){
    print("correct")
}
}$

/* Nick's note: this is only for code gen, I only tested it against SA (which it works)*/
/* this is not working for some reason
 need to go through step by step 
 the values print correctly so its an issue with the comparison
 */
{
int a
a = 9
int b
b = 4
if (a ==2+3+b){
print("yes")
}
print(b)
print(2+3)
print(2+3+b)
print(a)
}$



/*CG complex expressions pt. 2*/
{
    /* output: false true false*/
    print((2 == 1))
    print((3 != 2))
    print ((0 != 0))
}$

/*  basic output of all data type literals: output: true false 0 7 hello   world   end    */
{
print(true)
print(false)
print(0)
print(7)
print("hello")
print(" ")
print("world")
print("")
print("end")
}$
